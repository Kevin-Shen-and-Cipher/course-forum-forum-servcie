definitions:
  models.CreatePost:
    properties:
      content:
        type: string
      create_by:
        maxLength: 20
        type: string
      score:
        maximum: 5
        minimum: 0
        type: integer
      tags:
        items:
          type: integer
        type: array
      title:
        maxLength: 256
        type: string
    required:
    - content
    - create_by
    - score
    - title
    type: object
  models.CreateTag:
    properties:
      name:
        maxLength: 20
        type: string
    required:
    - name
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Post:
    properties:
      content:
        type: string
      create_by:
        type: string
      created_at:
        type: string
      id:
        type: integer
      score:
        type: integer
      state:
        type: boolean
      tags:
        items:
          $ref: '#/definitions/models.Tag'
        type: array
      title:
        type: string
      updated_at:
        type: string
      views:
        type: integer
    type: object
  models.Tag:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      posts:
        items:
          $ref: '#/definitions/models.Post'
        type: array
      updated_at:
        type: string
    type: object
  models.UpdatePost:
    properties:
      state:
        type: boolean
    required:
    - state
    type: object
  models.UpdateTag:
    properties:
      name:
        maxLength: 20
        type: string
    required:
    - name
    type: object
info:
  contact: {}
  description: This is the course forum api documentation
  license:
    name: MIT License
    url: https://github.com/Kevin-Shen-and-Cipher/course-forum-forum-servcie/blob/main/LICENSE
  title: Course forum API
  version: "1.0"
paths:
  /posts:
    get:
      consumes:
      - application/json
      description: Get all posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all posts
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Create a post
      parameters:
      - description: Create post request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreatePost'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create post
      tags:
      - posts
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Find a post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Find post
      tags:
      - posts
    patch:
      consumes:
      - application/json
      description: Update a post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update post request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePost'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update post
      tags:
      - posts
  /tags:
    get:
      consumes:
      - application/json
      description: Get all tags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tag'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all tags
      tags:
      - tags
    post:
      consumes:
      - application/json
      description: Create a tag
      parameters:
      - description: Create tag request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateTag'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Tag'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create tag
      tags:
      - tags
  /tags/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a tag
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete tag
      tags:
      - tags
    get:
      consumes:
      - application/json
      description: Find a tag
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Find tag
      tags:
      - tags
    patch:
      consumes:
      - application/json
      description: Update a tag
      parameters:
      - description: Tag ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update tag request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tag'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update tag
      tags:
      - tags
swagger: "2.0"
